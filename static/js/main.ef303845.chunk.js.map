{"version":3,"sources":["assets/garbage.svg","assets/add.svg","assets/add-hover.svg","assets/trashcan.svg","App.js","index.js"],"names":["App","useState","todoItems","setTodoItems","doingItems","setDoingItems","completedItems","setCompletedItems","Todo","Doing","Completed","inputBar","setInputBars","classNames","setClassNames","listAnimations","setListAnimations","TodoRef","useRef","DoingRef","CompletedRef","containers","name","items","borderColor","addToList","value","current","prev","id","uuid","task","className","onDragEnd","result","to","toFunction","from","object","console","log","destination","source","droppableId","index","splice","map","container","provided","snapshot","droppableProps","ref","innerRef","onClick","newObject","newClassNameObject","newListAnimationsObject","setTimeout","addInputBar","onMouseOut","e","currentTarget","src","add","onMouseOver","addHover","garbage","onKeyDown","key","enterClicked","type","item","draggableId","draggableProps","dragHandleProps","style","filter","trashcan","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef303845.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/garbage.ebfd7f74.svg\";","export default __webpack_public_path__ + \"static/media/add.a1ad828c.svg\";","export default __webpack_public_path__ + \"static/media/add-hover.9e69026a.svg\";","export default __webpack_public_path__ + \"static/media/trashcan.f2193089.svg\";","import {useState, useRef, createRef} from 'react'\r\nimport {DragDropContext, Droppable, Draggable} from 'react-beautiful-dnd'\r\nimport { uuid } from 'uuidv4'\r\nimport \"./styles.css\"\r\nimport garbage from './assets/garbage.svg'\r\nimport add from './assets/add.svg'\r\nimport addHover from './assets/add-hover.svg'\r\nimport trashcan from './assets/trashcan.svg'\r\n\r\nfunction App() {\r\n  const inputBars = {\r\n    Todo: false,\r\n    Doing: false,\r\n    Completed: false,\r\n  }\r\n  const className = {\r\n    Todo: \"inputBar\",\r\n    Doing: \"inputBar\",\r\n    Completed: \"inputBar\"\r\n  }\r\n  const listAnimation  = {\r\n    Todo: \"goingUp\",\r\n    Doing: \"goingUp\",\r\n    Completed: \"goingUp\"\r\n    }\r\n  const [todoItems, setTodoItems] = useState([]);\r\n  const [doingItems, setDoingItems] = useState([]);\r\n  const [completedItems, setCompletedItems] = useState([]);\r\n  const [inputBar, setInputBars] = useState(inputBars)\r\n  const [classNames, setClassNames] = useState(className)\r\n  const [listAnimations, setListAnimations] = useState(listAnimation)\r\n  const TodoRef = useRef()\r\n  const DoingRef = useRef();\r\n  const CompletedRef = useRef();\r\n \r\n  const containers = [\r\n    {\r\n      name: \"Todo\",\r\n      items: todoItems,\r\n      borderColor: \"red\"\r\n    },\r\n    {\r\n      name: \"Doing\",\r\n      items: doingItems,\r\n      borderColor: \"yellow\"\r\n    },\r\n    {\r\n      name: \"Completed\",\r\n      items: completedItems,\r\n      borderColor: \"green\"\r\n    }\r\n    \r\n\r\n\r\n  ]\r\n\r\n  function onDragEnd(result) {\r\n    let to;\r\n    let toFunction;\r\n    let from;\r\n    let fromFunction;\r\n    let object;\r\n    console.log(result)\r\n    if(result.destination === null) return\r\n    if(result.source.droppableId === result.destination.droppableId && result.source.index === result.destination.index) return\r\n\r\n    if(result.destination.droppableId === \"Todo\"){\r\n      toFunction = setTodoItems;\r\n      to = todoItems;\r\n    }\r\n    else if(result.destination.droppableId  === \"Doing\"){\r\n      toFunction = setDoingItems;\r\n      to = doingItems;\r\n    }\r\n    else if(result.destination.droppableId  === \"Completed\"){\r\n      toFunction = setCompletedItems;\r\n      to = completedItems;\r\n    }\r\n    \r\n    if(result.source.droppableId === \"Todo\"){\r\n      from = todoItems;\r\n      fromFunction = setTodoItems;\r\n    }\r\n    else if(result.source.droppableId  === \"Doing\"){\r\n      from = doingItems;\r\n      fromFunction = setDoingItems;\r\n      \r\n    }\r\n    else if(result.source.droppableId  === \"Completed\"){\r\n      from = completedItems;\r\n      fromFunction = setCompletedItems;\r\n      \r\n    }\r\n\r\n    console.log(\"source index = \" + result.source.index)\r\n    console.log(\"destination index = \" + result.destination.index)\r\n\r\n    \r\n    //we have the object\r\n    console.log(\"from = \" + from[result.source.index])\r\n    object = from[result.source.index];\r\n\r\n    //remove from \"from\"\r\n    from.splice(result.source.index,1)\r\n    // fromFunction(prev => (prev.filter((value,index) => index !== result.source.index)))\r\n    // let newArray = to;\r\n    // // if(result.source.droppableId != result.destination.droppableId && result.source.index != result.destination.index){\r\n    \r\n   \r\n    to.splice(result.destination.index,0,object)\r\n\r\n    toFunction(to)\r\n   // newArray.splice(result.destination.index,0,object)\r\n   \r\n    \r\n    // toFunction(newArray)\r\n  }\r\n  function clear(name) {\r\n    console.log(\"naem =\" + name)\r\n    if(name === \"Todo\"){\r\n      setTodoItems([]);\r\n    }\r\n    else if(name === \"Doing\"){\r\n      setDoingItems([])\r\n    }\r\n    else if(name === \"Completed\"){\r\n      setCompletedItems([])\r\n    }\r\n  }\r\n\r\n  function addToList(name){\r\n    \r\n    if(name === \"Todo\"){\r\n      let value = TodoRef.current.value;\r\n      if(value != \"\"){\r\n        setTodoItems(prev =>  {return [...prev, {id:uuid(),task: value}]})\r\n        TodoRef.current.value = \"\";\r\n      }\r\n    }\r\n    else if(name === \"Doing\"){\r\n      let value = DoingRef.current.value;\r\n      if(value != \"\"){\r\n        setDoingItems(prev => {return [...prev, {id:uuid(),task: value}]});\r\n        DoingRef.current.value = \"\";\r\n      }\r\n    }\r\n    else if(name === \"Completed\"){\r\n      let value = CompletedRef.current.value;\r\n      if(value != \"\"){\r\n        setCompletedItems(prev => {return [...prev, {id:uuid(),task: value}]})\r\n        CompletedRef.current.value = \"\";\r\n      }\r\n    }\r\n    \r\n   \r\n  }\r\n  function addInputBar(name){\r\n    let newObject = {\r\n      Todo: inputBar.Todo,\r\n      Doing: inputBar.Doing,\r\n      Completed: inputBar.Completed\r\n    }\r\n    let newClassNameObject = {\r\n      Todo: classNames.Todo,\r\n      Doing: classNames.Doing,\r\n      Completed: classNames.Completed\r\n    }\r\n    let newListAnimationsObject = {\r\n      Todo: listAnimations.Todo,\r\n      Doing: listAnimations.Doing,\r\n      Completed: listAnimations.Completed\r\n    }\r\n    if(name === \"Todo\"){\r\n      let value = !newObject.Todo;\r\n     newObject.Todo = value;\r\n     newObject.Doing = false;\r\n     newObject.Completed = false; \r\n      if(!value){\r\n        // let input = document.getElementById(\"Todo\");\r\n        // input.classList.add(\"closingInputBar\")\r\n        newClassNameObject.Todo = \"closingInputBar\";\r\n        // div[0].style.height = \"80vh\";\r\n        newListAnimationsObject.Todo = \"goingUp\";\r\n        \r\n        setTimeout(() => setInputBars(newObject), 500 )\r\n\r\n        }\r\n      else {\r\n        newClassNameObject.Todo = \"inputBar\";\r\n        newClassNameObject.Doing = \"closingInputBar\";\r\n        newClassNameObject.Completed = \"closingInputBar\";\r\n\r\n        newListAnimationsObject.Todo = \"goingDown\";\r\n          newListAnimationsObject.Doing = \"goingUp\";\r\n\r\n        \r\n          newListAnimationsObject.Completed = \"goingUp\";\r\n        \r\n\r\n\r\n        // div[0].style.height = \"75vh\";\r\n        \r\n        setInputBars(newObject)\r\n\r\n\r\n        }\r\n    }\r\n    \r\n    else if(name === \"Doing\"){\r\n      let value = !newObject.Doing;\r\n      newObject.Todo = false;\r\n      newObject.Doing = value;\r\n      newObject.Completed = false; \r\n      if(!value){\r\n        // let input = document.getElementById(\"Doing\");\r\n        // input.classList.add(\"closingInputBar\")\r\n        // div[1].style.height = \"80vh\";\r\n        newClassNameObject.Doing = \"closingInputBar\";\r\n        newListAnimationsObject.Doing = \"goingUp\";\r\n\r\n        setTimeout(() => setInputBars(newObject), 500 )\r\n\r\n      }\r\n      else {        \r\n        newClassNameObject.Doing = \"inputBar\";\r\n        newClassNameObject.Todo = \"closingInputBar\";\r\n        newClassNameObject.Completed = \"closingInputBar\";\r\n\r\n        newListAnimationsObject.Doing = \"goingDown\";\r\n          newListAnimationsObject.Todo = \"goingUp\";\r\n\r\n        \r\n          newListAnimationsObject.Completed = \"goingUp\";\r\n\r\n        \r\n\r\n        // div[1].style.height = \"75vh\";\r\n        setInputBars(newObject)\r\n\r\n      }\r\n     }\r\n     else if(name === \"Completed\"){\r\n      let value = !newObject.Completed;\r\n      newObject.Todo = false;\r\n      newObject.Doing = false;\r\n      newObject.Completed = !newObject.Completed; \r\n      if(!value){\r\n        newClassNameObject.Completed = \"closingInputBar\";\r\n        newListAnimationsObject.Completed = \"goingUp\";\r\n\r\n        setTimeout(() => setInputBars(newObject), 500 )\r\n\r\n      }\r\n      else {\r\n        newClassNameObject.Completed = \"inputBar\";\r\n        newClassNameObject.Doing = \"closingInputBar\";\r\n        newClassNameObject.Todo = \"closingInputBar\";\r\n        \r\n        newListAnimationsObject.Completed = \"goingDown\";\r\n          newListAnimationsObject.Doing = \"goingUp\";\r\n\r\n        \r\n          newListAnimationsObject.Todo = \"goingUp\";\r\n\r\n        \r\n\r\n        // div[2].style.height = \"75vh\";\r\n        setInputBars(newObject)\r\n\r\n      }\r\n     }\r\n     setListAnimations(newListAnimationsObject)\r\n     setClassNames(newClassNameObject)\r\n\r\n    // newObject[name] = !newObject[name];\r\n     \r\n    //  setTimeout(() => setInputBars(newObject), 500 )\r\n  }\r\n  function deleteItem(id,name) {\r\n    if(name === \"Todo\"){\r\n    setTodoItems(todoItems.filter(items => items.id !== id))  \r\n    }\r\n    else if(name === \"Doing\"){\r\n      setDoingItems(doingItems.filter(items => items.id !== id));\r\n    }\r\n    else if(name === \"Completed\"){\r\n      setCompletedItems(completedItems.filter(items => items.id !== id))\r\n    }\r\n      \r\n    }\r\n\r\n    function enterClicked(e,name){\r\n       if(e.key === \"Enter\"){\r\n         addToList(name)\r\n       }\r\n    }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"mainContainer\">\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        {containers.map(container => {\r\n          return (\r\n            <Droppable key={container.name}  droppableId={container.name}>\r\n              {(provided,snapshot) => {return (\r\n                <div className=\"container\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                  <div className=\"header\">\r\n                    <img onClick={() => addInputBar(container.name)} onMouseOut={e => e.currentTarget.src = add} onMouseOver={e => e.currentTarget.src = addHover} src={add}></img>\r\n                    <h2>{container.name}</h2>\r\n                    <img  onClick={() => clear(container.name)} src={garbage}></img>\r\n                  </div>\r\n\r\n                  {<div  className={ inputBar[container.name] ? classNames[container.name] : \"inputBarHidden\"} id={container.name}><input onKeyDown={(e) => enterClicked(e,container.name)} ref={container.name === \"Todo\" ? TodoRef : container.name === \"Doing\" ? DoingRef : container.name === \"Completed\" ? CompletedRef : null} type='text'></input><button onClick={() => addToList(container.name)}>Submit</button></div>}\r\n                  <div className={listAnimations[container.name]}>\r\n                    {container.items.map((item, index)=> {\r\n                       \r\n                      return (\r\n                        \r\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                          {(provided, snapshot) => {\r\n                            return (\r\n                              <div className=\"item\"   ref={provided.innerRef} {...provided.draggableProps}{...provided.dragHandleProps} style={{...provided.draggableProps.style,borderColor: container.borderColor}}>\r\n                                <img onClick={() => deleteItem(item.id, container.name)} className=\"trashcan\" src={trashcan}></img>\r\n                                {item.task}\r\n                                </div>\r\n                            )\r\n                          }}\r\n                        </Draggable>\r\n                        \r\n                      )\r\n                    })}\r\n                    </div>\r\n                    \r\n                  {provided.placeholder}\r\n                  </div>\r\n              )}}\r\n              \r\n            </Droppable>\r\n          )\r\n          \r\n        })}\r\n      </DragDropContext>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}